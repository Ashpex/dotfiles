# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

include "/home/sebastian/.cache/wal/colors-sway"

### Programs
#
#
exec redshift -l 40.712776:-74.005974
exec rootbar
exec_always mako
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term termite
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
# set $menu rofi -show run -modi run -location 2 -width 75 \
#                 -lines 2 -line-margin 0 -line-padding 1 \
#                 -separator-style none -font "Iosevka Extended Medium 10" -columns 6 -bw 0 \
#                 -hide-scrollbar \
#                 -kb-row-select "Tab" -kb-row-tab "" | xargs swaymsg exec --

set $menu wofi

font pango:Iosevka Extended Medium 12

### Output configuration
#
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# output "*" bg /home/sebastian/Pictures/Wallpapers/moon.jpg fill
output "*" background $wallpaper fill
client.focused $color0 $background $foreground $color4 $background

### Idle configuration
#
# Example configuration:

# exec swayidle -w \
#          timeout 300 'grim /tmp/screen.png; corrupter /tmp/screen.png /tmp/screen.png; swaylock -f -i /tmp/screen.png' \
#          timeout 600 'swaymsg "output * dpms off"' \
#        	resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'

bindsym Ctrl+Shift+l exec 'grim /tmp/screen.png; corrupter /tmp/screen.png /tmp/screen.png; swaylock -f -i /tmp/screen.png'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration

 input "1739:30383:DELL07E6:00_06CB:76AF_Touchpad" {
 	tap enabled
     	dwt enabled
     	drag enabled
     	tap_button_map lrm
     	natural_scroll enabled
     	middle_emulation enabled
 }

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+q kill

    # start your launcher
    bindsym $mod+d exec $menu --show run
    bindsym $mod+shift+d exec $menu --show drun

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'


#
# Custom Keybinds
#

bindsym Print exec ~/bin/sa-upload-w
bindsym $mod+Shift+p exec pavucontrol

bindsym XF86MonBrightnessDown exec brightnessctl set 10%-
bindsym XF86MonBrightnessUp exec brightnessctl set +10%

bindsym XF86AudioMute exec pamixer -t
bindsym XF86AudioRaiseVolume exec pamixer -i 10
bindsym XF86AudioLowerVolume exec pamixer -d 10
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

#
# Gaps 'n shit:
#
default_border normal
default_floating_border normal
# hide_edge_borders both
for_window [tiling] split toggle
gaps inner 15
gaps outer 15
for_window [app_id="^.*"] border pixel 3
for_window [class="^.*"] border pixel 3

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6

    bindsym $mod+bracketright workspace next
    bindsym $mod+bracketleft workspace prev

# Note: workspaces can have any name you want, not just numbers.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize grow width 10px
    bindsym $down resize shrink height 10px
    bindsym $up resize grow height 10px
    bindsym $right resize shrink width 10px

    # ditto, with arrow keys
    bindsym Left resize grow width 10px
    bindsym Down resize shrink height 10px
    bindsym Up resize grow height 10px
    bindsym Right resize shrink width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# include @sysconfdir@/sway/config.d/*
